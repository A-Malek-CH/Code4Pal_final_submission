-- Migration: Create admins table
-- This creates a separate admin table isolated from regular users for enhanced security

-- Create admins table
CREATE TABLE admins (
    id SERIAL PRIMARY KEY,
    email VARCHAR(255) UNIQUE NOT NULL,
    name VARCHAR(255) NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT NOW(),
    last_login TIMESTAMP,
    is_active BOOLEAN DEFAULT TRUE
);

-- Create table for admin JWT refresh tokens
CREATE TABLE admin_refresh_tokens (
    id SERIAL PRIMARY KEY,
    admin_id INT REFERENCES admins(id) ON DELETE CASCADE,
    token_hash VARCHAR(255) NOT NULL,
    expires_at TIMESTAMP NOT NULL,
    created_at TIMESTAMP DEFAULT NOW(),
    is_active BOOLEAN DEFAULT TRUE
);

-- Insert the initial admin user
-- Password hash for 'belkebir2004' will be generated by the application
-- This is a placeholder - the actual insertion will be done via Python to ensure proper hashing
INSERT INTO admins (email, name, password_hash) VALUES 
('mustapha.belkebir@ensia.edu.dz', 'Belkebir Mustapha', 'PLACEHOLDER_HASH');